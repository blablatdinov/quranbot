server {
    server_name quranbot.blablatdinov.ru; # здесь прописать или IP-адрес или доменное имя сервера
    access_log  /var/log/nginx/qbot.log;

    location /static/ {
        root /home/www/code/quranbot/;
        expires 30d;
    }

   location / { # Catch all but defined routes to serve the frontend
      root   /home/www/code/quranbot/admin_frontend/dist;
      index  index.html;
      try_files $uri $uri/ /index.html;
   }
 
    location /dumps { # Раздаем дампы для БД
        alias /home/www/code/quranbot/dumps;
        index not_a_file;
        autoindex on;
        types {}
    }

   location ^~ /bot_init/ { # Define routes to be directed to backend as proxy
        proxy_pass http://127.0.0.1:8010; 
        proxy_set_header Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

   location ^~ /admin/ { # Define routes to be directed to backend as proxy
        proxy_pass http://127.0.0.1:8010; 
        proxy_set_header Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

   location ^~ /api/ { # Define routes to be directed to backend as proxy
        proxy_pass http://127.0.0.1:8010; 
        proxy_set_header Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

   location ^~ /content/ { # Define routes to be directed to backend as proxy
        proxy_pass http://127.0.0.1:8010; 
        proxy_set_header Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/quranbot.blablatdinov.ru/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/quranbot.blablatdinov.ru/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = quranbot.blablatdinov.ru) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name quranbot.blablatdinov.ru;
    listen 80;
    return 404; # managed by Certbot


}
