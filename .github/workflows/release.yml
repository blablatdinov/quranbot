name: Test and release

on:
  push:
    branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: qbot
          POSTGRES_PASSWORD: qbot
          POSTGRES_DB: qbot_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 55

    steps:
    - name: Install Poetry
      uses: snok/install-poetry@v1.3.0
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    - name: create .env file
      run: |
        cp env_vars.ci .env
    - name: Run tests
      run: poetry run pytest -n 4
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
    - name: Adding Known Hosts
      run: mkdir ~/.ssh && echo '${{ secrets.SSH_HOST }}' > ~/.ssh/known_hosts
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_KEY_QBOT }}
        known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
    - name: Deploy
      run: ssh www@178.20.41.248 '/home/www/code/quranbot/deploy/restart.sh'
